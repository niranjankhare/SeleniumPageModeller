apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = 1.7
//version = '1.0'

jar {
    manifest {
        attributes 'Main-Class': 'org.gradle.MainMethod', 
        'Class-Path': './. ' ,
        'Implementation-Title': 'Gradle Quickstart',
        'Implementation-Version': version
    }
}
ext {
	typesafeConfigVersion = '1.3.1'
	log4jCoreVersion = '2.6.1'
	log4jApiVersion = '2.6.1'
	testngVersion = '6.9.12'
	seleniumJavaVersion = '3.0.0'
	jooqVersion = '3.10.0'
	jsoupVersion = '1.10.3'
	javaxServletApiVersion = '3.1.0'
	eclipseJettyAggregateVersion = '9.3.6.v20151106'
	codeModelVersion = '2.3.0'
	h2databaseVersion = '1.4.196'
	mysqlDriverVersion = '5.1.6'
	tomcatJdbcVersion = '8.5.23'
}
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jooq:jooq-codegen:3.10.0"
		classpath "org.mariadb.jdbc:mariadb-java-client:1.1.7"
 		classpath 'mysql:mysql-connector-java:5.1.6'
 		
	    }
}
repositories {
	mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    compile group: 'com.typesafe', name: 'config', version: "$typesafeConfigVersion"
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
	compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: "$seleniumJavaVersion"
   compile "org.testng:testng:$testngVersion"
   compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: "$log4jCoreVersion"
   compile group: 'org.apache.logging.log4j', name: 'log4j-api', version:  "$log4jApiVersion"
   // https://mvnrepository.com/artifact/org.glassfish.jaxb/codemodel
   compile group: 'org.glassfish.jaxb', name: 'codemodel', version: "$codeModelVersion"
   // https://mvnrepository.com/artifact/org.jooq/jooq
   compile group: 'org.jooq', name: 'jooq', version: "$jooqVersion"
   // https://mvnrepository.com/artifact/org.jooq/jooq-meta
 	compile group: 'org.jooq', name: 'jooq-meta', version: "$jooqVersion"
   // https://mvnrepository.com/artifact/org.jooq/jooq-codegen-maven
   compile group: 'org.jooq', name: 'jooq-codegen-maven', version: "$jooqVersion"
   // https://mvnrepository.com/artifact/org.jsoup/jsoup
   compile group: 'org.jsoup', name: 'jsoup', version: "$jsoupVersion"
   compile group: 'javax.servlet', name: 'javax.servlet-api', version: "$javaxServletApiVersion"
   compile group: 'org.eclipse.jetty.aggregate', name: 'jetty-all', version: "$eclipseJettyAggregateVersion"
   // https://mvnrepository.com/artifact/com.h2database/h2
   testCompile group: 'com.h2database', name: 'h2', version: "$h2databaseVersion"
   compile group: 'mysql', name: 'mysql-connector-java', version: "$mysqlDriverVersion"
   // https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-jdbc
   compile group: 'org.apache.tomcat', name: 'tomcat-jdbc', version: "$tomcatJdbcVersion"
   
   compile group: 'com.google.code.gson', name: 'gson', version: '2.6.2' 
}


task jooqGenerate << {
	def f = sourceSets.main.resources.srcDirs[0].toString()+"/db/automation.xml"
	println "Generating jooq classes using:" + f
	org.jooq.util.GenerationTool.generate(
	    javax.xml.bind.JAXB.unmarshal(new StringReader( file(f).text), org.jooq.util.jaxb.Configuration.class)
	) 
  
}
// compileJava.dependsOn jooqGenerate


test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
